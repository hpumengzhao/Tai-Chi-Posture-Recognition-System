# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Maintest.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import time
import sys
import cv2
import numpy as np
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import pyqtSignal
from PyQt5.QtGui import QPalette, QFont
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QWidget, QFileDialog, QMessageBox, QApplication
from threading import Thread
import multiprocessing
import warnings
from ProcessImage import Processer
from Classifier import Taichi_classifier

class Ui_MainWindow(QWidget):
    ##设置信号通道
    sinOut = pyqtSignal(str)
    sinOut2 = pyqtSignal(str)
    sinOut3 =  pyqtSignal(int)
    sinOut4 = pyqtSignal(str) ## 终端输出
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("多人太极拳姿态识别系统")
        MainWindow.resize(1582, 903)
        MainWindow.setFixedSize(1582, 903)
        self.sinOut.connect(self.GetProcessTime)
        self.sinOut2.connect(self.ProcessingWindow)
        self.sinOut3.connect(self.Display_PersonCount)
        self.sinOut4.connect(self.Terminal_Out)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setStyleSheet("background-color:#3C3F41;")
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")

        self.groupBox_3 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_3.setGeometry(QtCore.QRect(160, 470, 871, 131))
        self.groupBox_3.setStyleSheet("background:#3C3F41;")
        self.groupBox_3.setTitle("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_3.setGeometry(QtCore.QRect(160, 20, 191, 91))

        font = QtGui.QFont()
        font.setFamily("华文楷体")
        font.setPointSize(20)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setStyleSheet("border-radius:10px;\n"
"color:#3C3F41;\n"
"font: 20pt \"华文楷体\";\n"
"background:white;\n"
"font:bold;")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.upload)  ##上传图片

        self.pushButton_4 = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_4.setGeometry(QtCore.QRect(540, 20, 191, 91))
        font = QtGui.QFont()
        font.setFamily("华文楷体")
        font.setPointSize(20)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setStyleSheet("border-radius:10px;\n"
"color:#3C3F41;\n"
"font: 20pt \"华文楷体\";\n"
"background:white;\n"
"font:bold;")
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.clicked.connect(self.excute)  ##开辟线程，处理图片

        self.groupBox_4 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_4.setGeometry(QtCore.QRect(60, 110, 1051, 321))
        self.groupBox_4.setStyleSheet("")
        self.groupBox_4.setTitle("")
        self.groupBox_4.setObjectName("groupBox_4")
        self.line_3 = QtWidgets.QFrame(self.groupBox_4)
        self.line_3.setGeometry(QtCore.QRect(340, 30, 20, 221))
        self.line_3.setStyleSheet("")
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.line_4 = QtWidgets.QFrame(self.groupBox_4)
        self.line_4.setGeometry(QtCore.QRect(690, 30, 20, 221))
        self.line_4.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.label_3 = QtWidgets.QLabel(self.groupBox_4)
        self.label_3.setGeometry(QtCore.QRect(110, 270, 91, 20))
        self.label_3.setStyleSheet("color:white;\n"
"font-size:15px;\n"
"")
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.label_11 = QtWidgets.QLabel(self.groupBox_4)
        self.label_11.setGeometry(QtCore.QRect(430, 270, 201, 31))
        self.label_11.setStyleSheet("color:white;\n"
"font-size:15px;")
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.groupBox_4)
        self.label_12.setGeometry(QtCore.QRect(800, 270, 151, 20))
        self.label_12.setStyleSheet("color:white;\n"
"font-size:15px;")
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.groupBox_4)
        self.label_13.setGeometry(QtCore.QRect(40, 40, 271, 201))
        self.label_13.setStyleSheet("background-color:rgb(255, 255, 255);\n"
"border-radius:10px;")
        self.label_13.setText("")
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.groupBox_4)
        self.label_14.setGeometry(QtCore.QRect(390, 40, 271, 201))
        self.label_14.setStyleSheet("background-color:rgb(255, 255, 255);\n"
"border-radius:10px;")
        self.label_14.setText("")
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.groupBox_4)
        self.label_15.setGeometry(QtCore.QRect(740, 40, 271, 201))
        self.label_15.setStyleSheet("background-color:rgb(255, 255, 255);\n"
"border-radius:10px;")
        self.label_15.setText("")
        self.label_15.setObjectName("label_15")
        self.line_5 = QtWidgets.QFrame(self.groupBox)
        self.line_5.setGeometry(QtCore.QRect(1140, -40, 20, 881))
        self.line_5.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.groupBox_5 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_5.setGeometry(QtCore.QRect(1190, 110, 331, 131))
        self.groupBox_5.setTitle("")
        self.groupBox_5.setObjectName("groupBox_5")
        self.label_17 = QtWidgets.QLabel(self.groupBox_5)
        self.label_17.setGeometry(QtCore.QRect(10, 30, 171, 61))
        font = QtGui.QFont()
        font.setFamily("华文楷体")
        font.setPointSize(20)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_17.setFont(font)
        self.label_17.setStyleSheet("color:white;\n"
"font: 20pt \"华文楷体\";\n"
"font-weight:bold;")
        self.label_17.setAlignment(QtCore.Qt.AlignCenter)
        self.label_17.setObjectName("label_17")
        self.lcdNumber_2 = QtWidgets.QLCDNumber(self.groupBox_5)
        self.lcdNumber_2.setGeometry(QtCore.QRect(190, 20, 81, 71))
        self.lcdNumber_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lcdNumber_2.setStyleSheet("color:rgb(0, 255, 0);\n"
"background:white;")
        self.lcdNumber_2.setProperty("intValue", 0)
        self.lcdNumber_2.setObjectName("lcdNumber_2")
        self.label_10 = QtWidgets.QLabel(self.groupBox)
        self.label_10.setGeometry(QtCore.QRect(370, 30, 471, 61))
        font = QtGui.QFont()
        font.setFamily("华文行楷")
        font.setPointSize(30)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.label_10.setFont(font)
        self.label_10.setStyleSheet("color:white;\n"
"font: 30pt \"华文行楷\";")
        self.label_10.setTextFormat(QtCore.Qt.PlainText)
        self.label_10.setScaledContents(False)
        self.label_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_10.setObjectName("label_10")
        self.groupBox_2 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_2.setGeometry(QtCore.QRect(160, 640, 871, 161))
        self.groupBox_2.setTitle("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.textEdit = QtWidgets.QTextEdit(self.groupBox_2)
        self.textEdit.setGeometry(QtCore.QRect(50, 35, 781, 111))
        # self.textEdit.setDisabled(True)
        self.textEdit.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(13, 177, 27);\n"
"font-size: 13px;")
        self.textEdit.setObjectName("textEdit")
        self.label_18 = QtWidgets.QLabel(self.groupBox)
        self.label_18.setGeometry(QtCore.QRect(520, 610, 131, 61))
        font = QtGui.QFont()
        font.setFamily("华文楷体")
        font.setPointSize(20)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_18.setFont(font)
        self.label_18.setStyleSheet("color:white;\n"
"font: 20pt \"华文楷体\";\n"
"font-weight:bold;")
        self.label_18.setAlignment(QtCore.Qt.AlignCenter)
        self.label_18.setObjectName("label_18")
        self.groupBox_6 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_6.setGeometry(QtCore.QRect(1190, 370, 331, 431))
        self.groupBox_6.setTitle("")
        self.groupBox_6.setObjectName("groupBox_6")
        self.label_19 = QtWidgets.QLabel(self.groupBox_6)
        self.label_19.setGeometry(QtCore.QRect(50, 20, 241, 61))
        font = QtGui.QFont()
        font.setFamily("华文楷体")
        font.setPointSize(20)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_19.setFont(font)
        self.label_19.setStyleSheet("color:white;\n"
"font: 20pt \"华文楷体\";\n"
"font-weight:bold;")
        self.label_19.setAlignment(QtCore.Qt.AlignCenter)
        self.label_19.setObjectName("label_19")
        self.listWidget = QtWidgets.QListWidget(self.groupBox_6)
        self.listWidget.setGeometry(QtCore.QRect(40, 100, 256, 311))
        self.listWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(13, 177, 27);\n"
"font-size:17px;")
        self.listWidget.setObjectName("listWidget")
        self.line = QtWidgets.QFrame(self.groupBox)
        self.line.setGeometry(QtCore.QRect(70, 440, 1031, 20))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(self.groupBox)
        self.line_2.setGeometry(QtCore.QRect(70, 610, 1031, 20))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.line_6 = QtWidgets.QFrame(self.groupBox)
        self.line_6.setGeometry(QtCore.QRect(1200, 300, 321, 20))
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.gridLayout.addWidget(self.groupBox, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1582, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        ##初始化上传文件路径以及加载model
        self.uploadimg=""
        self.retranslateUi(MainWindow)
        ##图片处理器
        self.processor = Processer()
        ##分类器
        self.csf = Taichi_classifier()
        self.log = "Personal Vectors\n"## 终端信息
        self.Vec_data = []## 图片中的姿态向量
        self.pose_dic = {}
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "多人太极拳姿态识别系统"))
        self.pushButton_3.setText(_translate("MainWindow", "上传文件"))
        self.pushButton_4.setText(_translate("MainWindow", "姿态识别"))
        self.label_3.setText(_translate("MainWindow", "Input Image"))
        self.label_11.setText(_translate("MainWindow", "OutPut Image"))
        self.label_12.setText(_translate("MainWindow", "Pose Image"))
        self.label_17.setText(_translate("MainWindow", "人数统计："))
        self.label_10.setText(_translate("MainWindow", "多人太极拳姿态识别系统"))
        self.label_18.setText(_translate("MainWindow", "终端输出"))
        self.label_19.setText(_translate("MainWindow", "姿态预测结果"))
        __sortingEnabled = self.listWidget.isSortingEnabled()
        self.listWidget.setSortingEnabled(False)
        self.listWidget.setSortingEnabled(__sortingEnabled)
    def cv_imread(self):
        cv_img = cv2.imdecode(np.fromfile(self.uploadimg, dtype=np.uint8), -1)
        return cv_img
    def upload(self):##上传图像，并检测图片尺寸，尺寸应小于1000*1000
        imgName, imgType = QFileDialog.getOpenFileName(self, "打开图片", "", "*.jpg;;*.png;;All Files(*)")
        if imgName=='':##关闭文件夹则pass（即文件为空）
            pass
        else:
            self.uploadimg=imgName
            jpg = QtGui.QPixmap(imgName).scaled(self.label_13.width(), self.label_13.height())
            self.label_13.setPixmap(jpg)
            img = self.cv_imread()
            if img.shape[0]>1000 or img.shape[1]>1000:
                self.pushButton_4.setDisabled(True)
                self.ImageSizeError()
            else:
                self.pushButton_4.setDisabled(False)
    def ImageSizeError(self):##图片过大弹窗
        QMessageBox.critical(self,"错误","图片过大，请重新上传",QMessageBox.Yes|QMessageBox.No,QMessageBox.Yes)
    def ImageEmptyError(self):##图片为空警告
        QMessageBox.information(self, "错误", "图片为空", QMessageBox.Ok,QMessageBox.Ok)
    def ProcessingWindow(self,rcv):
        if rcv=="end":##处理结束后接收到"end"信号，关闭处理窗口
            self.infoBox.close()
        else:##接收到开始处理信号"start"
            self.infoBox = QMessageBox()
            self.infoBox.setStyleSheet("background:#3C3F41;\n color:white;\n")
            self.infoBox.setIcon(QMessageBox.Information)
            self.infoBox.setText("正在处理......")
            self.infoBox.setWindowTitle("Processing")
            self.infoBox.addButton(QMessageBox.Ok)
            self.infoBox.button(QMessageBox.Ok).hide()
            self.infoBox.exec_()
    def Display_PersonCount(self,pc):
        self.lcdNumber_2.display(pc)
    def Terminal_Out(self):
        self.textEdit.setText(self.log)
        self.log = "Personal Vectors\n"##每次执行完还需要初始化终端信息
    def Loadresult(self):
        self.listWidget.clear()
        _translate = QtCore.QCoreApplication.translate
        cnt = 0
        for v in self.pose_dic.keys():
            res="Person-"
            res+=str(v+1)+": "
            res+=self.pose_dic[v]
            item = QtWidgets.QListWidgetItem()
            item.setText(_translate("MainWindow", res))
            self.listWidget.addItem(item)
            cnt += 1
        self.pose_dic={} #clear
    def excute(self):##开线程，线程函数为work
        if self.uploadimg=='':
            self.ImageEmptyError()
        else:
            thread = Thread(target=self.work)
            thread.start()
    def GetProcessTime(self,rst): ##rst即为信号
        self.infoBox = QMessageBox()
        self.infoBox.setStyleSheet("background:#3C3F41;\n color:white;\n")
        self.infoBox.setIcon(QMessageBox.Information)
        self.infoBox.setText("处理时间: "+rst+"s")
        self.infoBox.setWindowTitle("Success!")
        self.infoBox.addButton(QMessageBox.Ok)
        self.infoBox.exec_()
        # QMessageBox.information(self, "Success!", "处理时间: "+rst+"s")
    def work(self):##调用Pose函数处理图片并显示在窗口上
        self.sinOut2.emit("start") ##向信号队列sinOut2发送start信号
        self.pushButton_4.setDisabled(True)
        tic=time.time()
        self.processor.Pose(self.uploadimg)
        pc = self.processor.people_count
        self.log+="Image path: " + self.uploadimg + "\n"

        ## 确定每个人的姿态映射
        for n in range(len(self.processor.subset)):
            Vec_n = []
            self.log+="Person-"+str(n+1)+": \n"
            for i in range(17):
                index = self.processor.subset[n][np.array(self.processor.limbSeq[i]) - 1]  ##第n个人的第i个关键点的index
                if -1 in index:
                    continue
                Y = self.processor.candidate[index.astype(int), 0]
                X = self.processor.candidate[index.astype(int), 1]
                # Y[0], X[0], Y[1], X[1]
                self.log+="["+str(i)+": ("+str(Y[0]-Y[1])+","+str(X[0]-X[1])+")]"
                Vec_n.append([i,Y[0]-Y[1],X[0]-X[1]])
            self.pose_dic[n] = self.csf.classify_work(Vec_n)
            self.log+="\n"
        print(self.pose_dic)

        self.Loadresult()

        self.sinOut4.emit("start")
        jpg = QtGui.QPixmap("result.png").scaled(self.label_13.width(), self.label_13.height())
        self.label_14.setPixmap(jpg)
        jpg = QtGui.QPixmap("only_Pose.png").scaled(self.label_13.width(), self.label_13.height())
        self.label_15.setPixmap(jpg)
        toc=time.time()
        self.pushButton_4.setDisabled(False)
        durationT = round((toc-tic),2)
        self.sinOut2.emit("end")###处理结束后向信号队列sinOut2发送end信号
        self.sinOut.emit(str(durationT))##向信号队列sinOut发送时间信号
        self.sinOut3.emit(pc)
if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())